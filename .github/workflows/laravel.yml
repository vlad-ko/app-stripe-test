on: [pull_request]
jobs:
  demo-ci-runner:
    runs-on: ubuntu-latest

    services:
      mysql-service:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306 
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:

      - name: Checkout app code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: shivammathur/setup-php@verbose
        with:
          php-version: 7.4
          coverage: xdebug
        env:
          update: true

      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Prepare Laravel Application
        run: |
          cp .env.example .env
          php artisan key:generate

      - name: Create test database
        run: |
          mysql -uroot -h127.0.0.1 -proot -e 'CREATE DATABASE IF NOT EXISTS test;'

      - name: Setup Database
        run: |
          php artisan migrate --no-interaction -vvv
          php artisan db:seed

      - name: Run Complete Testsuite with Coverage
        run: vendor/bin/phpunit --coverage-clover=results/coverage.xml --log-junit=results/test-report.xml

      - name: Fix results files
        run: sed -i -e "s%$GITHUB_WORKSPACE/%%g" *.xml
        working-directory: results

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
              SONAR_TOKEN: $SONAR_CLOUD_TOKEN_1
  
      - name: Upload overall coverage report
        run: bash <(curl -s https://codecov.io/bash) -f results/coverage.xml

      # - name: Run codacy-coverage-reporter
      #   uses: codacy/codacy-coverage-reporter-action@v1
      #   with:
      #     project-token: ${{ secrets.CODACY_API_TOKEN }}
      #     coverage-reports: results/coverage.xml

      # - name: Coveralls
      #   env:
      #     COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
      #   run: |
      #       composer global require php-coveralls/php-coveralls
      #       php-coveralls --coverage_clover=build/logs/clover.xml -v